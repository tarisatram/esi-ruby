=begin
#EVE Swagger Interface

#An OpenAPI for EVE Online

OpenAPI spec version: 0.5.3

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for EsiRuby::GetCharactersCharacterIdWalletJournal200Ok
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GetCharactersCharacterIdWalletJournal200Ok' do
  before do
    # run before each test
    @instance = EsiRuby::GetCharactersCharacterIdWalletJournal200Ok.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GetCharactersCharacterIdWalletJournal200Ok' do
    it 'should create an instact of GetCharactersCharacterIdWalletJournal200Ok' do
      expect(@instance).to be_instance_of(EsiRuby::GetCharactersCharacterIdWalletJournal200Ok)
    end
  end
  describe 'test attribute "amount"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "balance"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "date"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "extra_info"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "first_party_id"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "first_party_type"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["character", "corporation", "alliance", "faction"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.first_party_type = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "reason"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "ref_id"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "ref_type"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["player_trading", "market_transaction", "player_donation", "office_rental_fee", "bounty_prize_historical", "insurance", "mission_reward", "mission_reward_bonus", "cspa", "corp_account_withdrawal", "logo_change_fee", "market_escrow", "broker_fee", "alliance_maintenance_fee", "sales_tax", "jump_clone_installation_fee", "manufacturing", "contract", "bounty_prizes", "medal_creation_fee", "medal_issuing_fee", "customs_office_import_duty", "customs_office_export_duty", "corporate_reward_payout", "industry_facility_tax", "project_discovery_reward", "reprocessing_fee", "jump_clone_activation_fee", "unknown"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.ref_type = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "second_party_id"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "second_party_type"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["character", "corporation", "alliance", "faction"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.second_party_type = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "tax"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "tax_reciever_id"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

