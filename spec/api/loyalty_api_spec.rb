=begin
#EVE Swagger Interface

#An OpenAPI for EVE Online

OpenAPI spec version: 0.5.3

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for EsiRuby::LoyaltyApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'LoyaltyApi' do
  before do
    # run before each test
    @instance = EsiRuby::LoyaltyApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LoyaltyApi' do
    it 'should create an instact of LoyaltyApi' do
      expect(@instance).to be_instance_of(EsiRuby::LoyaltyApi)
    end
  end

  # unit tests for get_characters_character_id_loyalty_points
  # Get loyalty points
  # Return a list of loyalty points for all corporations the character has worked for  --- Alternate route: &#x60;/v1/characters/{character_id}/loyalty/points/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/loyalty/points/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/loyalty/points/&#x60; 
  # @param character_id An EVE character ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :datasource The server name you would like data from
  # @option opts [String] :token Access token to use if unable to set a header
  # @option opts [String] :user_agent Client identifier, takes precedence over headers
  # @option opts [String] :x_user_agent Client identifier, takes precedence over User-Agent
  # @return [Array<GetCharactersCharacterIdLoyaltyPoints200Ok>]
  describe 'get_characters_character_id_loyalty_points test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_loyalty_stores_corporation_id_offers
  # List loyalty store offers
  # Return a list of offers from a specific corporation&#39;s loyalty store  --- Alternate route: &#x60;/v1/loyalty/stores/{corporation_id}/offers/&#x60;  Alternate route: &#x60;/legacy/loyalty/stores/{corporation_id}/offers/&#x60;  Alternate route: &#x60;/dev/loyalty/stores/{corporation_id}/offers/&#x60;  --- This route expires daily at 11:05
  # @param corporation_id An EVE corporation ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :datasource The server name you would like data from
  # @option opts [String] :user_agent Client identifier, takes precedence over headers
  # @option opts [String] :x_user_agent Client identifier, takes precedence over User-Agent
  # @return [Array<GetLoyaltyStoresCorporationIdOffers200Ok>]
  describe 'get_loyalty_stores_corporation_id_offers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
